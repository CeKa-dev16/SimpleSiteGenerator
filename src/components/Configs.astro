---

---

<my-configs>
  <div>
    <button id="full" type="button" title="Full preview">Full preview</button>
    <button id="move" type="button" title="Switch menu">Move to bottom</button>
    <button id="copy" type="button" title="Copy code">Copy image</button>
    <button id="reset" type="button" title="Reset focus">Reset focus</button>
</my-configs>

<style>
  div {
    width: 100%;
    display: flex;
    justify-content: space-around;
    gap: 1ch;
  }

  button {
    flex: 1;
    background-color: var(--body);
    border-radius: 1ch;
    height: 2rem;
    border: none;
    font-weight: 600;
    color: white;
    user-select: none;
    cursor: pointer;
    transition: all 0.2s;
    text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.5);
  }

  button:hover {
    background-color: var(--accent);
  }
</style>

<script>
  import {
    setCanvasTo,
    main,
    // ownCanvas,
    original_canvas,
    desactivateEvents,
  } from "../app.js";

  import html2canvas from "html2canvas";

  class MyConfigs extends HTMLElement {
    constructor() {
      super();

      const move = this.querySelector("#move");
      main.classList.contains("to-bottom")
        ? (move.innerHTML = "Move to top")
        : (move.innerHTML = "Move to bottom");
      move.addEventListener("click", () => {
        main.classList.toggle("to-bottom");
        document.querySelector("body").classList.toggle("overflow");
        move.innerHTML == "Move to top"
          ? (move.innerHTML = "Move to bottom")
          : (move.innerHTML = "Move to top");
        window.scrollTo(0, 0);
      });

      const full = this.querySelector("#full");
      full.addEventListener("click", () => {
        main.classList.toggle("fullscreen");
        document.querySelector(".exit").classList.toggle("invisible");
        desactivateEvents();
      });

      const copy = this.querySelector("#copy");
      copy.addEventListener("click", () => {
        let width = Number(prompt('ResoluciÃ³n (en pixeles)'));
        html2canvas(document.querySelector("#canvas"), {
          windowWidth: width
        }).then((canvas) => {
          let link = document.createElement('a');
          link.download = "Canvas como imagen.png";
          link.href = canvas.toDataURL();
          link.click();
        });
      });

      const reset = this.querySelector("#reset");
      reset.addEventListener("click", () => {
        setCanvasTo(original_canvas);
      });
    }
  }

  customElements.define("my-configs", MyConfigs);
</script>
